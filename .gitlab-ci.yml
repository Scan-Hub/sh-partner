variables:
  REGION: asia-southeast1
  IMAGE_NAME: sh-partner-api
  IMAGE_NAME_WORKER: sh-partner-api-worker

  CONTAINER_REPO_ASIA_STAG: 420811272222.dkr.ecr.ap-southeast-1.amazonaws.com/sh-staging-ecr/partner-api
  NAMESPACE_STAG: sh-api-stag
  FULLREPO_ASIA_STAG: $CONTAINER_REPO_ASIA_STAG:$CI_COMMIT_SHORT_SHA
  FULLREPO_ASIA_PROD: $CONTAINER_REPO_ASIA_PROD:$CI_COMMIT_SHORT_SHA
  ENV_STAGING: $ENV_STAGING
  ENV_PRODUCTION: $ENV_PRODUCTION

  HELM_VALUE: ${CI_COMMIT_REF_NAME}
  HELM_VERSION: 2.4.6
  AWS_REGION: ap-southeast-1
  GITLAB_TOKEN: $GITLAB_RUNNER_TOKEN
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
  GIT_SUBMODULE_STRATEGY: recursive


stages:
  - build
  - deploy

.kubectl_config: &kubectl_config
  - |
      if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
        aws eks --region $AWS_REGION update-kubeconfig --name rinz-production-cluster
      fi
  - |
      if [ "$CI_COMMIT_REF_NAME" == "stag" ]; then
        aws eks --region $AWS_REGION update-kubeconfig --name rinz-staging-cluster
      fi
.predeploy: &predeploy |
  apk add --no-cache  bash git  python3 py3-pip curl
  pip3 install --upgrade pip 
  pip3 install --no-cache-dir awscli==1.19.112
  helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.12.0
  helm repo add helm-template s3://rinz-helm-template
  helm pull s3://rinz-helm-template/helm-template-$HELM_VERSION.tgz --untar=true

build_stag:
  image: docker:19.03.1
  tags:
  - rinz-stag
  stage: build
  services:
  - docker:19.03.1-dind
  before_script:
    - apk add --no-cache curl jq python py-pip wget git bash
    - git submodule add -f --branch stag https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/scan-hub/sh-lib.git lib
    - git submodule sync --recursive
    - git submodule update --init --remote --recursive
    - pip install awscli==1.19.112
    - export VERIFY_CHECKSUM=false && curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod +x ./get_helm.sh && ./get_helm.sh
    - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin
  script:
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $CONTAINER_REPO_ASIA_STAG

    
    - |
      if [ "$CI_COMMIT_REF_NAME" == "stag" ]; then
        sed -i -e "s#\[IMAGE_NAME_WORKER\]#$IMAGE_NAME_WORKER#g" skaffold.yaml
        sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_STAG#g" skaffold.yaml
        sed -i -e "s#\[IMAGE_NAME\]#$IMAGE_NAME#g" skaffold.yaml
        sed -i -e "s#\[CONTAINER_REPO\]#$CONTAINER_REPO_ASIA_STAG#g" skaffold.yaml
      fi

    - /usr/local/bin/skaffold build -p profile-stag --file-output=build.json
  only:
    refs:
      - stag
  artifacts:
    paths:
    - skaffold.yaml
    - build.json

deploy_stag:
  stage: deploy
  image:  alpine/helm:3.2.1
  tags:
  - rinz-stag
  script:
    - *predeploy
    - *kubectl_config
    - git clone https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/rinz-io-devops/helm-value/$IMAGE_NAME.git
    - mv $IMAGE_NAME/stag.yaml .
    - |
      if [ "$CI_COMMIT_REF_NAME" == "stag" ]; then
        sed -i -e "s#\[FULLREPO_ASIA\]#$FULLREPO_ASIA_STAG#g" stag.yaml
        sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_STAG#g" stag.yaml
      fi
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin
   
    - /usr/local/bin/skaffold deploy -p profile-stag   -a build.json
  only:
    refs:
      - stag

deploy_worker_stag:
  stage: deploy
  image:  alpine/helm:3.2.1
  tags:
  - rinz-stag
  script:
    - *predeploy
    - *kubectl_config
    - git clone https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/rinz-io-devops/helm-value/$IMAGE_NAME.git
    - mv $IMAGE_NAME/worker-stag.yaml .
    - |
      if [ "$CI_COMMIT_REF_NAME" == "stag" ]; then
        sed -i -e "s#\[FULLREPO_ASIA\]#$FULLREPO_ASIA_STAG#g" worker-stag.yaml
        sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_STAG#g" worker-stag.yaml
      fi
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin

    - /usr/local/bin/skaffold deploy -p profile-worker-stag   -a build.json
  only:
    refs:
      - stag
# build_prod:
#   image: docker:19.03.1
#   tags:
#   - rinz-prod
#   stage: build
#   services:
#   - docker:19.03.1-dind
#   before_script:
#     - apk add --no-cache curl jq python py-pip wget git bash
#     - git submodule add -f --branch master https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/rinz-io/rinz-lib.git lib
#     - git submodule sync --recursive
#     - git submodule update --init --remote --recursive
#     - pip install awscli==1.19.112
#     - export VERIFY_CHECKSUM=false && curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod +x ./get_helm.sh && ./get_helm.sh
#     - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin
#   script:
#     - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $CONTAINER_REPO_ASIA_PROD
#     - |
#       if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
#         sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_PROD#g" skaffold.yaml
#         sed -i -e "s#\[IMAGE_NAME_WORKER\]#$IMAGE_NAME_WORKER#g" skaffold.yaml
#         sed -i -e "s#\[IMAGE_NAME\]#$IMAGE_NAME#g" skaffold.yaml
#         sed -i -e "s#\[CONTAINER_REPO\]#$CONTAINER_REPO_ASIA_PROD#g" skaffold.yaml
#       fi
#     - /usr/local/bin/skaffold build -p profile-prod --file-output=build.json
#   only:
#     refs:
#       - master
#   artifacts:
#     paths:
#     - skaffold.yaml
#     - build.json

# deploy_prod:
#   stage: deploy
#   image:  alpine/helm:3.2.1
#   tags:
#   - rinz-prod
#   script:
#     - *predeploy
#     - *kubectl_config
#     - git clone https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/rinz-io-devops/helm-value/$IMAGE_NAME.git
#     - mv $IMAGE_NAME/prod.yaml .
#     - |
#       if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
#         sed -i -e "s#\[FULLREPO_ASIA\]#$FULLREPO_ASIA_STAG#g" prod.yaml
#         sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_PROD#g" prod.yaml
#       fi
#     - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
#     - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin

#     - /usr/local/bin/skaffold deploy -p profile-prod   -a build.json
#   only:
#     refs:
#       - master


# deploy_worker_prod:
#   stage: deploy
#   image:  alpine/helm:3.2.1
#   tags:
#   - rinz-prod
#   script:
#     - *predeploy
#     - *kubectl_config
#     - git clone https://read-token:$GITLAB_TOKEN@gitlab.rinznetwork.com/rinz-io-devops/helm-value/$IMAGE_NAME.git
#     - mv $IMAGE_NAME/worker-prod.yaml .
#     - |
#       if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
#         sed -i -e "s#\[FULLREPO_ASIA\]#$FULLREPO_ASIA_PROD#g" worker-prod.yaml
#         sed -i -e "s#\[NAMESPACE\]#$NAMESPACE_PROD#g" worker-prod.yaml
#       fi
#     - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
#     - curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v1.38.0/skaffold-linux-amd64 && chmod +x skaffold &&  mv skaffold /usr/local/bin
#     - /usr/local/bin/skaffold deploy -p profile-worker-prod   -a build.json
#   only:
#     refs:
#       - master